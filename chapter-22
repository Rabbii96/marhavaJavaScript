//In a web browser, the window object is the global object for JavaScript running in that browser.
//You will get the window object.
//Yes! When you declare a method inside an object, using a normal function vs an arrow function, there is an important difference in how this behaves.

const laptop = {
  brand: "dell",
  getBrand: function () {
    console.log(this.brand);
  },
};

const mobile = {
  brand: "samsung",
};
mobile.getBrand = laptop.getBrand;
mobile.getBrand();
laptop.getBrand();

//In JavaScript, this refers to the object that is executing the current function. But its value depends on how the function is called, not where it's written.

const manager = {
  assignWork: function () {
    this.tasks = "tjsks";
    console.log(this);
  },
};

manager.assignWork();

console.log(manager.tasks);
